name: "Deploy Infrastructure in the Development environment"
on:
  workflow_dispatch:
    inputs:
      action:
        description: "Terraform action [plan, apply]"
        type: choice
        default: "plan"
        options:
          - plan
          - apply

jobs:
  Infrastructure:
    name: Apply Infrastructure via Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ap-southeast-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3
          terraform_wrapper: false
      - name: Init Terraform
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD_DEV }}
          SMTP_HOST: "email-smtp.ap-southeast-1.amazonaws.com"
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME_DEV }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD_DEV }}
        run: |
          cd ./environments/dev/
          echo "mysql_password = \"${DATABASE_PASSWORD}\"" >> terraform.tfvars
          echo "SMTP_HOST = \"${SMTP_HOST}\"" >> terraform.tfvars
          echo "SMTP_USERNAME = \"${SMTP_USERNAME}\"" >> terraform.tfvars
          echo "SMTP_PASSWORD = \"${SMTP_PASSWORD}\"" >> terraform.tfvars
          terraform init

      - name: Plan Infrastructure
        if: github.event.inputs.action == 'plan'
        run: |
          cd ./environments/dev/
          terraform plan

      - name: Apply Infrastructure
        if: github.event.inputs.action == 'apply'
        run: |
          cd ./environments/dev/
          terraform apply -auto-approve
